<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
http://www.springframework.org/schema/p "
       default-lazy-init="true"
        >

    <context:component-scan base-package="it.sevenbits"/>
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=ru -->
        <bean
                class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="locale"/>
        </bean>

        <bean class="it.sevenbits.helpers.HandlerInterceptor"></bean>
    </mvc:interceptors>

    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>

    <!--<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>-->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

    <!-- Define jsp-files directory -->
    <bean id="viewResolver1" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>


    <!-- Define jade view resolver -->

    <bean id="jadeResolver" class="it.sevenbits.viewresolver.CustomJadeViewResolver">
        <property name="configuration" ref="jadeConfiguration"/>
        <property name="order" value="0"/>
    </bean>

    <bean id="jadeConfiguration" class="de.neuland.jade4j.JadeConfiguration">
        <property name="caching" value="false"/>
        <property name="templateLoader" ref="jadeTemplateLoader"/>
    </bean>

    <bean id="jadeTemplateLoader" class="de.neuland.jade4j.spring.template.SpringTemplateLoader">
        <property name="basePath" value="/WEB-INF/jade/"/>
        <property name="encoding" value="UTF-8"/>
        <property name="suffix" value=".jade"/>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="atom" value="application/atom+xml"/>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="*" value="*/*"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="useNotAcceptableStatusCode" value="true"/>
        <property name="defaultContentType">
            <bean class="org.springframework.http.MediaType">
                <constructor-arg index="0" value="text"/>
                <constructor-arg index="1" value="html"/>
            </bean>
        </property>
        <property name="viewResolvers">
            <list>
                <ref bean="viewResolver1"/>
                <ref bean="jadeResolver"/>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
            </list>
        </property>
    </bean>


</beans>